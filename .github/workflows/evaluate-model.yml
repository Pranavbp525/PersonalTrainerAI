name: Evaluate Model Quality

permissions:
  id-token: write
  contents: read

# runs biâ€‘weekly at 07:00 UTC
on:
  schedule:
    - cron: '0 7 */14 * *'
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCS_BUCKET:  ${{ secrets.GCS_BUCKET }}
  GAR_LOCATION: ${{ secrets.CLOUD_RUN_REGION }}
  REGION: ${{ secrets.CLOUD_RUN_REGION }}

jobs:
  evaluate-and-upload:
    name: Run evaluation & upload metrics
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Write secrets to .env for evaluation
        run: |
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          echo "DEEPSEEK_API_KEY=${{ secrets.DEEPSEEK_API_KEY }}" >> .env
          echo "LANGSMITH_API=${{ secrets.LANGSMITH_API }}" >> .env
          echo "LANGSMITH_TRACING=${{ secrets.LANGSMITH_TRACING }}" >> .env
          echo "LANGSMITH_PROJECT=${{ secrets.LANGSMITH_PROJECT }}" >> .env

      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Install gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Run evaluation script
        id: eval
        run: |
          python src/chatbot/agent_eval/eval.py > eval_output.json
          accuracy=$(jq '.accuracy | tonumber' eval_output.json)
          echo "Model accuracy: $accuracy"
          echo "accuracy=$accuracy" >> $GITHUB_OUTPUT

      - name: Upload metrics to GCS
        run: |
          TS=$(date -u +"%Y%m%dT%H%M%SZ")
          gsutil cp eval_output.json "gs://${{ env.GCS_BUCKET }}/model_metrics/eval_${TS}.json"

      - name: Notify via SMTP if accuracy is below 90%
        if: ${{ steps.eval.outputs.accuracy < 0.9 }}
        env:
          EMAIL_SENDER:   ${{ secrets.EMAIL_SENDER }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_RECEIVER: ${{ secrets.EMAIL_RECEIVER }}
        run: |
          python - <<EOF
import os, json
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

# Load credentials & eval result
sender   = os.environ["EMAIL_SENDER"]
password = os.environ["EMAIL_PASSWORD"]
receiver = os.environ["EMAIL_RECEIVER"]

with open("eval_output.json") as f:
    data = json.load(f)
accuracy = data.get("accuracy", 0)

# Build email
subject = "ðŸš¨ Model Accuracy Alert"
body = f"""\
Hi Team,

The latest evaluation shows accuracy dropped below 90%.

Current Accuracy: {accuracy:.2%}

Please investigate and retrain or adjust thresholds as needed.

Regards,
GitHub Actions Bot
"""

msg = MIMEMultipart()
msg["From"]    = sender
msg["To"]      = receiver
msg["Subject"] = subject
msg.attach(MIMEText(body, "plain"))

# Send via Gmail SMTP
with smtplib.SMTP_SSL("smtp.gmail.com", 465) as server:
    server.login(sender, password)
    server.send_message(msg)
EOF
