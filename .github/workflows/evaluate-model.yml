name: Evaluate Model Quality

# Allow manual trigger + daily at 07:00Â UTC
on:
  schedule:
    - cron:  '0 7 * * *'
  workflow_dispatch:

permissions:
  id-token: write     # for Workload Identity Federation
  contents:  read

env:
  PROJECT_ID:   ${{ secrets.GCP_PROJECT_ID }}
  GCS_BUCKET:   ${{ secrets.GCS_BUCKET }}
  GAR_LOCATION: ${{ secrets.CLOUD_RUN_REGION }}
  REGION:       ${{ secrets.CLOUD_RUN_REGION }}

jobs:
  evaluate-and-upload:
    name: Run evaluation & upload metrics
    runs-on: ubuntu-latest

    # make all of these available to your Python script as os.environ[â€¦]
    env:
      LANGSMITH_API_KEY:   ${{ secrets.LANGSMITH_API_KEY }}
      LANGSMITH_TRACING:   ${{ secrets.LANGSMITH_TRACING }}
      LANGSMITH_PROJECT:   ${{ secrets.LANGSMITH_PROJECT }}
      DEEPSEEK_API_KEY:    ${{ secrets.DEEPSEEK_API_KEY }}
      OPENAI_API_KEY:      ${{ secrets.OPENAI_API_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Authenticate to GCP so gsutil links up to the right bucket
      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account:            ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Install gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Run evaluation script
        id: eval
        run: |
          python src/chatbot/agent_eval/eval.py > eval_output.json

      - name: Debug GCS access
        run: |
          gcloud auth list
          gcloud config list project
          gsutil ls "gs://${{ env.GCS_BUCKET }}/model_metrics/" || echo "ðŸ‘€ bucket listing failed"

      - name: Upload metrics to GCS
        run: |
          TS=$(date -u +"%Y%m%dT%H%M%SZ")
          gsutil cp eval_output.json "gs://${{ env.GCS_BUCKET }}/model_metrics/eval_${TS}.json"

      - name: Verify upload
        run: |
          gsutil ls "gs://${{ env.GCS_BUCKET }}/model_metrics/"
