name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - cloudrun-ci-cd # Trigger deployment only on pushes to the main branch

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: ${{ secrets.CLOUD_RUN_REGION }} # Use the same region for AR and Cloud Run
  GAR_REPOSITORY: ${{ secrets.ARTIFACT_REGISTRY_REPO }}
  BACKEND_SERVICE_NAME: ${{ secrets.CLOUD_RUN_BACKEND_SERVICE_NAME }}
  FRONTEND_SERVICE_NAME: ${{ secrets.CLOUD_RUN_FRONTEND_SERVICE_NAME }}
  REGION: ${{ secrets.CLOUD_RUN_REGION }}

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    # Grant permissions for Workload Identity Federation
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Google Auth (Workload Identity Federation)
      id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

    # NOTE: Alternative: Use docker/build-push-action if you prefer building locally on the runner
    # - name: Build and Push Docker Image using Docker Action
    #   uses: docker/build-push-action@v5
    #   with:
    #     push: true
    #     tags: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
    #     context: . # Assuming Dockerfile is at the root

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Authorize Docker push
      run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

    # Build and push image using Google Cloud Buildpacks (or Dockerfile if you uncomment the docker command)
    # This uses Cloud Build behind the scenes, good for consistency with GCP tooling
    - name: Build and Push Image using Cloud Buildpacks
      run: |-
        gcloud builds submit --pack image=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
      # OR: If you have a Dockerfile, use this instead:
      # run: |-
      #   gcloud builds submit --tag ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.SERVICE_NAME }}
        region: ${{ env.REGION }}
        # Deploy the image pushed in the previous step
        image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
        # platform: managed # Optional: specify if not default
        # env_vars: # Optional: Set environment variables
        #   KEY1=value1
        #   KEY2=value2
        # secrets: # Optional: Mount secrets
        #   SECRET_NAME_1=latest # Mount latest version
        #   SECRET_NAME_2=my-secret:1 # Mount specific version

    # Optional: Output the deployed service URL
    - name: Show Deployed URL
      run: echo ${{ steps.deploy.outputs.url }}
